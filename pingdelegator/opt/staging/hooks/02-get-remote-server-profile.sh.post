#!/usr/bin/env sh
#
# Ping Identity DevOps - Docker Build Hooks
#
#- This hook may be used to set the server if there is a setup procedure
# 
#- >Note: The PingData (i.e. Directory, DataSync, DataGovernance, DirectoryProxy) 
#- products will all provide this

# shellcheck source=pingcommon.lib.sh
. "${HOOKS_DIR}/pingcommon.lib.sh"

mkdir -p "${SECRETS_DIR}"

# Get the certificate and key if they are provided
if test -n "${CERTIFICATE_FILE}"
then
    if ! test -f "${CERTIFICATE_FILE}"
    then
        echo_red "**********"
        echo_red "CERTIFICATE_FILE value [${CERTIFICATE_FILE}] is invalid: the specified file does not exist"
        exit 75
    else
        _nginxCrt="${CERTIFICATE_FILE}"
    fi
else
    _nginxCrt="${SECRETS_DIR}/nginx.crt"
fi

if test -n "${CERTIFICATE_KEY_FILE}"
then
    if ! test -f "${CERTIFICATE_KEY_FILE}"
    then
        echo_red "**********"
        echo_red "CERTIFICATE_KEY_FILE value [${CERTIFICATE_KEY_FILE}] is invalid: the specified file does not exist"
        exit 75
    else
        _nginxKey="${CERTIFICATE_KEY_FILE}"
    fi
else
    _nginxKey="${SECRETS_DIR}/nginx.key"
fi

if ! test -f "${_nginxCrt}" ;
then
    if ! test -f "${_nginxKey}" ;
    then
        head -c 1024 /dev/urandom | tr -dc 'a-zA-Z0-9-' | cut -c 1-64 > "${_nginxKey}"
    fi

    openssl req \
        -x509 \
        -nodes \
        -days 365 \
        -subj "/C=us/ST=co/O=pingidentity/OU=docker/CN=dev" \
        -addext "subjectAltName=DNS:${PD_DELEGATOR_PUBLIC_HOSTNAME}, DNS:localhost, IP:127.0.0.1" \
        -newkey rsa:2048 \
        -keyout "${_nginxKey}" \
        -out ${_nginxCrt};
fi

echo "CERTIFICATE_FILE=\"${_nginxCrt}\"" >> "${CONTAINER_ENV}"
echo "CERTIFICATE_KEY_FILE=\"${_nginxKey}\"" >> "${CONTAINER_ENV}"
